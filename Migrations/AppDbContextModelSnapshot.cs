// <auto-generated />
using System;
using CodingClub.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodingClub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CodingClub.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientEmail");

                    b.Property<string>("ClientFName");

                    b.Property<int?>("ClientId1");

                    b.Property<string>("ClientLName");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientId1");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CodingClub.Models.DeployProject", b =>
                {
                    b.Property<int>("ProjectId");

                    b.Property<int>("ClientId");

                    b.Property<int>("DeployProjectId");

                    b.HasKey("ProjectId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("DeployProjects");
                });

            modelBuilder.Entity("CodingClub.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProjectName");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("CodingClub.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProjectId");

                    b.Property<string>("StudentEmail");

                    b.Property<string>("StudentFName");

                    b.Property<string>("StudentLName");

                    b.HasKey("StudentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("CodingClub.Models.StudentTeam", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("TeamId");

                    b.Property<int>("StudentTeamId");

                    b.HasKey("StudentId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("StudentTeams");
                });

            modelBuilder.Entity("CodingClub.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TeamName");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("CodingClub.Models.Client", b =>
                {
                    b.HasOne("CodingClub.Models.Client")
                        .WithMany("clients")
                        .HasForeignKey("ClientId1");
                });

            modelBuilder.Entity("CodingClub.Models.DeployProject", b =>
                {
                    b.HasOne("CodingClub.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodingClub.Models.Project", "Project")
                        .WithMany("Clients")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodingClub.Models.Student", b =>
                {
                    b.HasOne("CodingClub.Models.Project")
                        .WithMany("Students")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("CodingClub.Models.StudentTeam", b =>
                {
                    b.HasOne("CodingClub.Models.Student", "Student")
                        .WithMany("Teams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodingClub.Models.Team", "Team")
                        .WithMany("Students")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
